// -*- mode: javascript; -*- // @flow
/* eslint-disable no-undef */

declare type PointCompatible =
  | [number, number]

declare class Point {
  static fromObject(object: PointLike, copy?: boolean): this;
  static min(pointA: PointLike, pointB: PointLike): this;
  column: number;
  row: number;
  compare(other: PointLike): PointComparison;
  constructor(row: number, column: number): this;
  copy(): this;
  freeze(): this;
  isEqual(other: PointLike): boolean;
  isGreaterThan(other: PointLike): boolean;
  isGreaterThanOrEqual(other: PointLike): boolean;
  isLessThan(other: PointLike): boolean;
  isLessThanOrEqual(other: PointLike): boolean;
  negate(): this;
  serialize(): PointCompatible;
  toArray(): PointCompatible;
  toString(): string;
  translate(other: PointLike): this;
  traverse(other: PointLike): this;
}

declare type PointLike =
  | Point           // nominal
  | PointCompatible // structural
