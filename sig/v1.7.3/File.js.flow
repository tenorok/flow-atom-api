// -*- mode: javascript; -*- // @flow
/* eslint-disable no-undef */

type FileEncoding =
  | buffer$NonBufferEncoding

declare class File {
  constructor(filePath: string, symlink?: boolean): this;
  create(): Promise<boolean>;
  onDidChange(callback: () => void): Disposable;
  onDidRename(callback: () => void): Disposable;
  onDidDelete(callback: () => void): Disposable;
  onWillThrowWatchError(callback:(errorObject: {
    error: Object,
    handle(): void
  }) => void): Disposable;
  isFile(): true;
  isDirectory(): false;
  isSymbolicLink(): boolean;
  exists(): Promise<boolean>;
  existsSync(): boolean;
  getDigest(): Promise<string>;
  getDigestSync(): string;
  setEncoding(encoding: FileEncoding): void;
  getEncoding(): FileEncoding;
  getPath(): string;
  getRealPathSync(): string;
  getRealPath(): Promise<string>;
  getBaseName(): string;
  getParent(): Directory;
  read(flushCache: boolean): Promise<string>;
  write(text: string): Promise<void>;
  writeSync(text: string): void;
}
